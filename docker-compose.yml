version: '3.8'
services:

  postgres:
    image: postgres:16.0
    restart: unless-stopped
    container_name: portfolio_postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - portfolio
    volumes:
      - ./_volumes/postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    container_name: portfolio_backend
    build: ./images/api
    ports:
      - 3000:3000
    volumes:
      - ./images/api/src:/usr/app/src
    networks:
      - portfolio
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: postgres
    depends_on:
      postgres:
        condition: service_healthy

  # frontend:
  #   container_name: portfolio_frontend
  #   build: ./images/frontend
  #   ports: 
  #     - 5173:5173
  #   depends_on:
  #     - backend
  #   networks:
  #     - portfolio  
  #   # https://www.youtube.com/watch?v=QePBbG5MoKk&ab_channel=NetNinja
  #   # This video helped to make sure my React project would run correctly
  #   # stdin_open: true  
  #   tty: true 
  #   volumes:
  #     - ./images/frontend:/app
  #     - /app/node_modules
      
networks:
  portfolio:
    driver: bridge

volumes:
  postgres-data: